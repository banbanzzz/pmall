<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<context:annotation-config></context:annotation-config>

	<!--自动扫描IOC组件  -->
	<context:component-scan base-package="com.mapper,com.service.imp"></context:component-scan>

	<!-- aop -->
	<!-- 开启aspectj代理 spring采用CGLIB代理 -->
	<aop:aspectj-autoproxy/>

	<!-- 使用阿里巴巴的数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="jdbc:mysql://39.107.14.86:3306/pmall?serverTimezone=UTC"></property>
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="username" value="admin"></property>
		<property name="password" value="admin"></property>
		<!-- 连接池参数 -->
		<property name="maxActive" value="800"/>
		<property name="minIdle" value="10"/>
	</bean>

	<!-- 注册sqlSessionFactoryBean -->
	<!-- spring和MyBatis完美整合，不需要单独配置mybatis的映射文件 -->
	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源  连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 指定 mybatis 主配置文件 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- Mapper接口所在的包名，Spring会自动找到其下的类 -->
	<!-- 生产dao代理对象 -->
	<bean id="mapperConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.mapper"></property>
	</bean>

	<!-- 注册事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="100" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="20" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="10000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close" depends-on="jedisPoolConfig">
		<constructor-arg name="poolConfig" ref="jedisPoolConfig" />
		<constructor-arg name="host" value="127.0.0.1" />
		<constructor-arg name="port" value="6379" />
	</bean>

</beans>